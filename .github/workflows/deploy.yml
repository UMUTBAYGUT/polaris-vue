# Sample workflow for building and deploying a VitePress site to GitHub Pages
#
name: Deploy documentation

on:
  push:
    branches: [docs]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Not needed if lastUpdated is not enabled
          submodules: 'recursive'
          persist-credentials: false
      # - uses: pnpm/action-setup@v2 # Uncomment this if you're using pnpm
      # - uses: oven-sh/setup-bun@v1 # Uncomment this if you're using Bun
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: lts/iron
          cache: yarn
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Install dependencies
        run: |
          yarn install
          npm install -g vite-node
      - name: Build submodule polaris to get tokens
        run: |
          cd polaris
          yarn install
          yarn build
          cd ../
      - name: Build with VitePress
        run: |
          yarn docs:build
          touch docs/dist/.nojekyll
          cp -R docs/v1 docs/dist/v1
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
